import base64
from vaa import VAA

rando_vaas = [
    # "AQAAAAABAGIFk2Y5IrdWcKLeVD7JRx4fCZx4wqgnFMJDZsjCozZif3YjS4FHdKJbdY9efyG7YNXV4su/JhtI7S88KFMvNyABZKhYlQAAAAAACHTq424N2c+YvB1AKSPg/l8ySLNcVjKlE9uWh2C08xSfAAAAAAAAAAcAzqjJy9s3Paw9R7Eo9YkhwW+WBqsNRFFznK6n2O6EieRxd2VydDEyMzQ1MTIzNDUxMjM0NXF3ZXJ0MTIzNDU=",
    # "AQAAAAABAC5HtG+7keVSxUMgai4UScq73lU8VPOCMb7C4B5HMboGeUWl4WX5ddyYdowTG1luXl4lKFLjosih7WiFwTPuyKMAZKWcxgAAAAAACGJB/9wDK2k7+4VEhY8EA97Iby4XIK+fNPjWX+V0tiOMAAAAAAAABEMAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAmJaAAAAAAAAAAAAAAAAA5lTbnfR9/pUYdaVyI2/tWSzsKisABgAAAAAAAAAAAAAAAKYbskPPAM1Af/rhH9xR9Zds0jgtAAYAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA==",
    #    "AQAAAAABAOxXLpUGKByJirvLnuEIt1CVFB458zWN82AY7RBetDABHCNLm0Wfm45czQv/rftxlWY1Zo/0vPjBMqov41Iohv4BZJpRVgAAAAAACNGCJmJ1vVBAbVLTnnknzHLEopTFIV/mfbIwJ3LMRw+WAAAAAAAAADYAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAD0I2AAAAAAAAAAAAAAAAdyN8OV9fFBfFKhUcPETVnpSWAxgABQAAAAAAAAAAAAAAAMuUJSikXQKH4amk+b+zYY5B5cpZAAIAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA==",
    #    "AQAAAAABAArsIpLyNMyY6bhr+tw26SD+cMsfSMH3eqD4qsqX+OmYEa6BZGoAPbfTOhIt7xfF9z3K/wcHvCkEWpIE1tgOaxIAZKldXwAAbxUAATsmQJ+Kre0/XdyhhGlapqD6gpsMhcr4SFYySJbSFMqYAAAAAAAAXNEgAwAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAmJaABpuIV/6rgYT7aH9jRhjANdrEOdwa6ztVmKDwAAAAAAEAAW2a5rLTM8HWUwGlnaPu04jKXcYMsSSWWEt1y+axX9vtACBiwmqII1mSRvynh2KbQHl3FuBksdJO149VStqwGB0pLnsiYmFzaWNfcmVjaXBpZW50Ijp7InJlY2lwaWVudCI6ImMyVnBNV3BoZFRONmJuSTJObUZyYUc0NWMyTjZPVFF3YlhobGEyTmtkbWd3Wm5Cc056TnlNSGx0In19",
    "AQAAAAABAJDtFfvfkRctdg9LgE0Ah0e4AvCVvq2Vq7IbNCl77Gv6Bufd8s9q5yngmrFsyCesV4EcfJhI8HzvqeqwPx0EszEAZME8eQAA5OoAATsmQJ+Kre0/XdyhhGlapqD6gpsMhcr4SFYySJbSFMqYAAAAAAAAXzcgAwAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAACRhOcqAAQP6CvJxkgPaczQ9E0mSX9cGM+6mzUrrRz/0O8UQy/wQAAQAAAAAAAAAAAAAAAP2S02qt8BA7WwEtaoAT+/mFfSfvAAJgI9UKnBjrEqbHOfZ9Kjc6AkT9xZn2Na8ajqumwaYYdXsic29tZUFkZHJlc3MiOiIwWDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAiLCJzb21lTnVtYmVyIjo2OTY5LCJzb21lQWN0aW9ucyI6W3sibmFtZSI6Ik1JTlQiLCJhcmdzIjpbMSwiMFgxMTExMTExMTExMTExMTExMTExMTExMTExMTExMTExMTExMTExMTExIl0sInZhbHVlIjoiNjkwMDAwMDAwMDAwMDBuIn1dfQ=="
]


def test_vaa():
    for rando_vaa in rando_vaas:
        parsed = VAA.parse(base64.b64decode(rando_vaa))
        print(parsed.extra["Payload"])
        print(parsed.__dict__)
